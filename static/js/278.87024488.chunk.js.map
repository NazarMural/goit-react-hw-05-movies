{"version":3,"file":"static/js/278.87024488.chunk.js","mappings":"2KAgBA,IAZoB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACfC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAAMC,MAAO,CAAEC,KAAML,GAA/C,SACGD,EAAKO,eAAiBP,EAAKQ,kBAInC,C,wGCmDD,UA1De,WACb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCP,EAAAA,EAAAA,WAAS,GAAjD,eAAOQ,EAAP,KAAqBC,EAArB,KA+BA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAAaM,IAAI,SAC3BD,GACFE,EAAAA,EAAA,+BAAuCF,EAAvC,MACGG,MAAK,SAAAC,GACuB,IAAvBA,EAAIC,QAAQC,OACdR,GAAgB,GAEhBA,GAAgB,GAElBL,GAAgB,OAAIW,EAAIC,SACzB,IACAE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEjB,GAAE,CAACb,KAGF,iCACE,kBAAMgB,SA7BW,SAAAC,GAEnB,GADAA,EAAEC,iBACmB,KAAjBvB,EAAMwB,OACR,OAAOC,EAAAA,OAAAA,QAAe,oBAIxBnB,EAAgB,CAAEoB,MAAO1B,IACzBC,EAAS,GACV,EAoBG,WACE,kBACE0B,KAAK,OACLC,KAAK,cACL5B,MAAOA,EACP6B,SApCa,SAAAP,GAAC,OAAIrB,EAASqB,EAAEQ,cAAc9B,MAA7B,KAsChB,2CAEF,wBACGE,EAAa6B,KAAI,SAAArB,GAAK,OACrB,SAAC,IAAD,CAA4BpB,KAAMoB,GAAhBA,EAAMhB,GADH,MAIxBa,GACC,+DAAuCF,EAAaM,IAAI,SAAxD,QACE,OAGT,C,qGC1DYqB,EAAU,mCAAG,WAAMN,GAAN,uFACNO,MAAM,GAAD,OAJR,+BAIQ,OAAeP,EAAf,mBAHb,qCAEc,YAClBZ,EADkB,QAEhBoB,GAFgB,yCAGfpB,EAAIqB,QAHW,uBAKXC,QAAQC,OAAO,IAAIC,MAAM,UALd,mFAAH,sDAQvBN,EAAWO,UAAY,CACrBb,MAAOc,IAAAA,OAAAA,W","sources":["components/GalleryItem/GalleryItem.jsx","pages/Movies/Movies.jsx","servises/api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst GalleryItem = ({ item }) => {\n  const location = useLocation();\n  \n  return (\n    <li>\n      <Link to={`/movies/${item.id}`} state={{ from: location }}>\n        {item.original_name || item.original_title}\n      </Link>\n    </li>\n  );\n};\n\nexport default GalleryItem;\n\nGalleryItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};","import React from 'react';\nimport GalleryItem from 'components/GalleryItem/GalleryItem';\nimport { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from 'servises/api';\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [notification, setNotification] = useState(false);\n\n  const handleChange = e => setValue(e.currentTarget.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (value.trim() === '') {\n      return Notify.warning('Write a request!');\n    }\n    // setNameMovie(value);\n\n    setSearchParams({ query: value });\n    setValue('');\n  };\n\n  useEffect(() => {\n    const movie = searchParams.get('query');\n    if (movie) {\n      API.fetchQuery(`3/search/movie?query=${movie}&`)\n        .then(res => {\n          if (res.results.length === 0) {\n            setNotification(true);\n          } else {\n            setNotification(false);\n          }\n          setSearchResult([...res.results]);\n        })\n        .catch(error => console.log(error));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchMovie\"\n          value={value}\n          onChange={handleChange}\n        />\n        <button>Search</button>\n      </form>\n      <ul>\n        {searchResult.map(movie => (\n          <GalleryItem key={movie.id} item={movie} />\n        ))}\n      </ul>\n      {notification ? (\n        <p>There are no movies with the name \"{searchParams.get('query')}\".</p>\n      ) : null}\n    </>\n  );\n};\n\nexport default Movies;\n","import PropTypes from 'prop-types';\n\nconst BASE_URl = 'https://api.themoviedb.org/';\nconst KEY = 'd9889a4b017e04f28be44670743011f8';\n\nexport const fetchQuery = async query => {\n  const res = await fetch(`${BASE_URl}${query}api_key=${KEY}`);\n  if (res.ok) {\n    return res.json();\n  }\n  return await Promise.reject(new Error('error'));\n};\n\nfetchQuery.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n"],"names":["item","location","useLocation","to","id","state","from","original_name","original_title","useState","value","setValue","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","notification","setNotification","useEffect","movie","get","API","then","res","results","length","catch","error","console","log","onSubmit","e","preventDefault","trim","Notify","query","type","name","onChange","currentTarget","map","fetchQuery","fetch","ok","json","Promise","reject","Error","propTypes","PropTypes"],"sourceRoot":""}